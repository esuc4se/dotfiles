#########################################################
## display

# main view の左端にコミットIDを表示する
set main-view = id date author commit-title:graph=yes,refs=yes

# blame view の行数表示をON、intervalを1に
set blame-view  = date:default author:email-user id:yes,color line-number:yes,interval=1 text

# Pager系の行数表示をON、intervalを1に (default: line-number:no,interval=5)
set pager-view  = line-number:yes,interval=1 text
set stage-view  = line-number:yes,interval=1 text
set log-view    = line-number:yes,interval=1 text
set blob-view   = line-number:yes,interval=1 text
set diff-view   = line-number:yes,interval=1 text:yes,commit-title-overflow=no

# 横分割に強制する
set vertical-split = no

# 空白無視 (status-view では表示するが diff-view では無視する) (W でトグル)
set ignore-space = at-eol

# 検索時に大文字小文字を無視する (default: false)
set ignore-case = true

# 水平分割したウィンドウの下画面サイズを % で指定（行数指定も可）
set split-view-height = 80%

# マージ diff を表示する
set diff-options = -m --first-parent

# マウスを有効にする
set mouse = true

# '+行数' の形で Editor に行番号を引数として渡すか
set editor-line-number = yes

# リフレッシュするタイミング
set refresh-mode = auto

# 差分表示に diff-highlight を使う
set diff-highlight = true


#########################################################
## keybind

# disable
bind main F         none

# vim keybind
bind generic g      move-first-line
bind generic G      move-last-line
bind main G         move-last-line

bind generic E      view-grep

# コミットのハッシュ値をコピー
bind main C !@zsh -c "echo -n %(commit) | pbcopy"

# cherry-pick
bind main p !git cherry-pick %(commit)
bind main P !git cherry-pick %(commit)

# rebase
bind diff R !git rebase -i %(commit)
bind main R !git rebase -i %(commit)

# refresh
bind generic <Ctrl-r> refresh
bind generic <Ctrl-g> refresh

bind status + !git commit --amend

bind status D !@?git checkout HEAD -- %(file)

# checkout
bind main c !@?git checkout %(commit)
bind refs c !git checkout %(branch)
bind refs C !git checkout %(branch)
